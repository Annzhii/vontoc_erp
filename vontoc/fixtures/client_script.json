[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2025-06-30 07:12:13.626787",
  "module": "VONTOC",
  "name": "Submit Material Request",
  "script": "frappe.ui.form.on('Material Request', {\n    on_submit: function(frm) {\n        if (frm.doc.material_request_type === \"Purchase\") {\n            frappe.call({\n                method: 'vontoc.api.material_request.material_request_submitted',\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(r) {\n                    if (!r.exc) {\n                        frappe.msgprint(__('已处理采购申请相关逻辑'));\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-07-04 15:02:48.690773",
  "module": "VONTOC",
  "name": "Send Purchase Order For Approval",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tafter_workflow_action: function(frm) {\n\t\tif (frm.doc.workflow_state === 'Sent For Approval'){\n\t\t    frappe.call({\n                method: \"vontoc.api.purchase_order.sent_po_for_approval\",\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-07-05 16:22:54.942421",
  "module": "VONTOC",
  "name": "Send Purchase Receipt",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n    after_workflow_action: async function(frm) {\n        if (frm.doc.workflow_state !== 'Pending Warehouse Receipt') return;\n\n        const promises = frm.doc.items.map(row => {\n            return frappe.db.get_value('Item', row.item_code, 'inspection_required_before_purchase')\n                .then(r => r.message.inspection_required_before_purchase);\n        });\n\n        const results = await Promise.all(promises);\n        const has_inspection_required = results.includes(1);\n\n        // 🔁 无论是否需要质检，都调用 Python 后端方法，通过变量has_inspection_required在后端做判断\n        frappe.call({\n            method: \"vontoc.api.purchase_receipt.item_quality_inspection_or_not\",\n            args: {\n                docname: frm.doc.name,\n                has_inspection_required: has_inspection_required\n            },\n            callback: function(r) {\n                if (r.message) {\n                    frappe.msgprint(__(r.message));\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-07-08 19:26:08.137385",
  "module": "VONTOC",
  "name": "Send Purchase Receipt After Quality Inspection",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n    refresh: function(frm) {\n        // 只有 inspection 用户 且未确认过才显示按钮\n        frappe.call({\n            method: \"vontoc.utils.utils.get_user_profile_name\", // 替换为你的方法\n            callback: function(r) {\n                if (\n                    r.message === \"inspection\" &&\n                    !frm.doc.custom_inspection_confirmed\n                ) {\n                    frm.add_custom_button(\"质检确认\", () => {\n                        // 按钮点击逻辑\n                        frappe.call({\n                            method: \"vontoc.api.purchase_receipt.quality_inspection_finished\",\n                            args: {\n                                docname: frm.doc.name\n                            },\n                            callback: function() {\n                                frappe.msgprint(\"质检已确认\");\n                                frm.reload_doc(); // 刷新表单以隐藏按钮\n                            }\n                        });\n                    });\n                }\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2025-07-17 23:22:14.397910",
  "module": "VONTOC",
  "name": "Send Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\n    after_workflow_action: function(frm) {\n        let state = frm.doc.workflow_state;\n        console.log(\"当前状态是: \", state);\n        if (state === 'Sent For Approval') {\n            frappe.call({\n                method: \"vontoc.api.delivery_note.sent_dn_for_approval\",\n                args: { docname: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        }\n\n        else if (state === 'Ready For Dispatch') {\n            frappe.call({\n                method: \"vontoc.api.delivery_note.approve_dn\",\n                args: { docname: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        }\n\n        else if (state === 'Return Required') {\n            frappe.call({\n                method: \"vontoc.api.delivery_note.require_return\",\n                args: { docname: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        }\n        //表单提交逻辑在class on submit里面调用\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2025-08-19 23:31:08.251065",
  "module": "VONTOC",
  "name": "Send Delivery Note After Packing Slip",
  "script": "frappe.ui.form.on('Delivery Note', {\n    refresh: function(frm) {\n        frappe.call({\n            method: \"vontoc.utils.utils.get_user_profile_name\", // 假设返回当前用户角色\n            callback: function(r) {\n                if (\n                    r.message === \"delivery\" &&  // 你返回的角色名\n                    !frm.doc.custom_packing_confirmed &&    // 自定义字段判断\n                    frm.doc.workflow_state === \"Ready For Dispatch\"\n                ) {\n                    frm.add_custom_button(\"完成装箱单\", () => {\n                        frappe.call({\n                            method: \"vontoc.api.delivery_note.mark_ready_for_dispatch\",\n                            args: {\n                                docname: frm.doc.name\n                            },\n                            callback: function() {\n                                frm.reload_doc();\n                            }\n                        });\n                    });\n                }\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2025-08-15 21:54:14.295785",
  "module": "VONTOC",
  "name": "Send Delivery Note After Dispatch",
  "script": "frappe.ui.form.on('Delivery Note', {\n    refresh: function(frm) {\n        frappe.call({\n            method: \"vontoc.utils.utils.get_user_profile_name\",\n            callback: function(r) {\n                const isDeliveryUser = r.message === \"delivery\";\n                const notDispatched = !frm.doc.custom_delivery_dispatched;\n                const notReturned = !frm.doc.is_return;\n                const isSubmitted = frm.doc.docstatus === 1;\n                if (isDeliveryUser && notDispatched && notReturned && isSubmitted) {\n                    frm.add_custom_button(\"发货完成\", () => {\n                        frappe.call({\n                            method: \"vontoc.api.delivery_note.delivery_dispatched\",\n                            args: {\n                                docname: frm.doc.name\n                            },\n                            callback: function() {\n                                frm.reload_doc();\n                            }\n                        });\n                    });\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier Quotation",
  "enabled": 1,
  "modified": "2025-05-30 18:57:14.706441",
  "module": "VONTOC",
  "name": "Create Guideline Price",
  "script": "frappe.ui.form.on('Supplier Quotation', {\n    refresh: function(frm) {\n        frm.add_custom_button(__('Create Guideline Price'), function() {\n            frappe.call({\n                method: \"vontoc.api.guideline_price.create_guideline_price\",\n                args: {\n                    supplier_quotation: frm.doc.name\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.set_route(\"Form\", \"Guideline Price\", r.message);\n                    }\n                }\n            });\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-08-22 18:52:08.536275",
  "module": "VONTOC",
  "name": "Send Purchase Invoice After Pending",
  "script": "frappe.ui.form.on(\"Purchase Invoice\", {\n    after_workflow_action: function(frm) {\n        if (frm.doc.workflow_state === 'Pending') {\n            frappe.call({\n                method: \"vontoc.api.purchase_invoice.validate_pr\",\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Request",
  "enabled": 1,
  "modified": "2025-08-25 21:21:51.304961",
  "module": "VONTOC",
  "name": "Send Payment Request After Pending",
  "script": "frappe.ui.form.on('Payment Request', {\n    after_workflow_action: function(frm) {\n        if (frm.doc.workflow_state === 'Pending') {\n            frappe.call({\n                method: \"vontoc.api.payment_request.validate_pr\",\n                args: {\n                    docname: frm.doc.name\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__(r.message));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        }\n    }\n})",
  "view": "Form"
 }
]